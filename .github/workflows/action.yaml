name: Deploy viktparty

on:
  push:

jobs:
  frontend:
    runs-on: ubuntu-latest
    name: Build and deploy frontend
    env:
      REGISTRY: "ghcr.io/jonaskop"
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ github.token }}"

      - name: Set environment variables
        run: |
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}/viktparty/frontend" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: true
          tags: "${{ env.IMAGE_REGISTRY }}:latest,${{ env.IMAGE_REGISTRY }}:${{ env.SHA_SHORT }}"
          cache-from: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache"
          cache-to: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache,mode=max"
  server:
    runs-on: ubuntu-latest
    name: Build and deploy server
    env:
      REGISTRY: "ghcr.io/jonaskop"
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ github.token }}"

      - name: Set environment variables
        run: |
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}/viktparty/server" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: server
          push: true
          tags: "${{ env.IMAGE_REGISTRY }}:latest,${{ env.IMAGE_REGISTRY }}:${{ env.SHA_SHORT }}"
          cache-from: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache"
          cache-to: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache,mode=max"
  postgres-migrator:
    runs-on: ubuntu-latest
    name: Build and deploy postgres-migrator
    env:
      REGISTRY: "ghcr.io/jonaskop"
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ github.token }}"

      - name: Set environment variables
        run: |
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}/viktparty/postgres-migrator" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: server
          file: server/postgres-migrator.Dockerfile
          push: true
          tags: "${{ env.IMAGE_REGISTRY }}:latest,${{ env.IMAGE_REGISTRY }}:${{ env.SHA_SHORT }}"
          cache-from: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache"
          cache-to: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache,mode=max"

  # trigger-infra:
  #   runs-on: ubuntu-latest
  #   name: Trigger infra pipeline
  #   needs:
  #     - server
  #     - client
  #   steps:
  #     - name: Trigger pipeline
  #       run: |
  #         curl \
  #           https://api.github.com/repos/jonaskop/fowlit-infrastructure/dispatches \
  #           -X POST \
  #           -H "Accept: application/vnd.github+json" \
  #           -d '{"event_type":"trigger-k8s-update","client_payload":{"unit":false,"integration":true}}' \
  #           --header 'authorization: Bearer ${{ secrets.GH_ADMIN_ACCESS_TOKEN }}'
